// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Microsoft.RESTier.Cli.TextTemplate
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\t-qiche\Documents\RESTier-CLI\RESTier.CLI\TextTemplate\CSPROJFile.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class CSPROJFile : CSPROJFileBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"<?xml version=""1.0"" encoding=""utf-8""?>
<Project ToolsVersion=""12.0"" DefaultTargets=""Build"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">
  <Import Project=""..\packages\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.0\build\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props"" Condition=""Exists('..\packages\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.0\build\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props')"" />
  <Import Project=""..\packages\Microsoft.Net.Compilers.1.0.0\build\Microsoft.Net.Compilers.props"" Condition=""Exists('..\packages\Microsoft.Net.Compilers.1.0.0\build\Microsoft.Net.Compilers.props')"" />
  <Import Project=""$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props"" Condition=""Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')"" />
  <PropertyGroup>
    <Configuration Condition="" '$(Configuration)' == '' "">Debug</Configuration>
    <Platform Condition="" '$(Platform)' == '' "">AnyCPU</Platform>
    <ProductVersion>
    </ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1576204E-84F4-4437-A140-55377235F511}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>");
            
            #line 21 "C:\Users\t-qiche\Documents\RESTier-CLI\RESTier.CLI\TextTemplate\CSPROJFile.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(projectName));
            
            #line default
            #line hidden
            this.Write("</RootNamespace>\r\n    <AssemblyName>");
            
            #line 22 "C:\Users\t-qiche\Documents\RESTier-CLI\RESTier.CLI\TextTemplate\CSPROJFile.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(projectName));
            
            #line default
            #line hidden
            this.Write("</AssemblyName>\r\n    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>\r\n   " +
                    " <UseIISExpress>true</UseIISExpress>\r\n    <IISExpressSSLPort />\r\n    <IISExpress" +
                    "AnonymousAuthentication />\r\n    <IISExpressWindowsAuthentication />\r\n    <IISExp" +
                    "ressUseClassicPipelineMode />\r\n    <UseGlobalApplicationHostFile />\r\n    <NuGetP" +
                    "ackageImportStamp>\r\n    </NuGetPackageImportStamp>\r\n  </PropertyGroup>\r\n  <Prope" +
                    "rtyGroup Condition=\" \'$(Configuration)|$(Platform)\' == \'Debug|AnyCPU\' \">\r\n    <D" +
                    "ebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <Optimize>" +
                    "false</Optimize>\r\n    <OutputPath>bin\\</OutputPath>\r\n    <DefineConstants>DEBUG;" +
                    "TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLeve" +
                    "l>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" \'$(Configur" +
                    "ation)|$(Platform)\' == \'Release|AnyCPU\' \">\r\n    <DebugType>pdbonly</DebugType>\r\n" +
                    "    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\</OutputPath>\r\n    <DefineCon" +
                    "stants>TRACE</DefineConstants>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <Warn" +
                    "ingLevel>4</WarningLevel>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Inc" +
                    "lude=\"EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c56" +
                    "1934e089, processorArchitecture=MSIL\">\r\n      <HintPath>..\\packages\\EntityFramew" +
                    "ork.6.1.3\\lib\\net45\\EntityFramework.dll</HintPath>\r\n      <Private>True</Private" +
                    ">\r\n    </Reference>\r\n    <Reference Include=\"EntityFramework.SqlServer, Version=" +
                    "6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089, processorArchitecture" +
                    "=MSIL\">\r\n      <HintPath>..\\packages\\EntityFramework.6.1.3\\lib\\net45\\EntityFrame" +
                    "work.SqlServer.dll</HintPath>\r\n      <Private>True</Private>\r\n    </Reference>\r\n" +
                    "    <Reference Include=\"Microsoft.AI.Agent.Intercept, Version=1.2.1.0, Culture=n" +
                    "eutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Hi" +
                    "ntPath>..\\packages\\Microsoft.ApplicationInsights.Agent.Intercept.1.2.1\\lib\\net45" +
                    "\\Microsoft.AI.Agent.Intercept.dll</HintPath>\r\n      <Private>True</Private>\r\n   " +
                    " </Reference>\r\n    <Reference Include=\"Microsoft.AI.DependencyCollector, Version" +
                    "=2.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitectur" +
                    "e=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.ApplicationInsights.DependencyCo" +
                    "llector.2.1.0\\lib\\net45\\Microsoft.AI.DependencyCollector.dll</HintPath>\r\n      <" +
                    "Private>True</Private>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.AI.P" +
                    "erfCounterCollector, Version=2.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad" +
                    "364e35, processorArchitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.Appl" +
                    "icationInsights.PerfCounterCollector.2.1.0\\lib\\net45\\Microsoft.AI.PerfCounterCol" +
                    "lector.dll</HintPath>\r\n      <Private>True</Private>\r\n    </Reference>\r\n    <Ref" +
                    "erence Include=\"Microsoft.AI.ServerTelemetryChannel, Version=2.1.0.0, Culture=ne" +
                    "utral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <Hin" +
                    "tPath>..\\packages\\Microsoft.ApplicationInsights.WindowsServer.TelemetryChannel.2" +
                    ".1.0\\lib\\net45\\Microsoft.AI.ServerTelemetryChannel.dll</HintPath>\r\n      <Privat" +
                    "e>True</Private>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.AI.Web, Ve" +
                    "rsion=2.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchit" +
                    "ecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.ApplicationInsights.Web.2.1" +
                    ".0\\lib\\net45\\Microsoft.AI.Web.dll</HintPath>\r\n      <Private>True</Private>\r\n   " +
                    " </Reference>\r\n    <Reference Include=\"Microsoft.AI.WindowsServer, Version=2.1.0" +
                    ".0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL" +
                    "\">\r\n      <HintPath>..\\packages\\Microsoft.ApplicationInsights.WindowsServer.2.1." +
                    "0\\lib\\net45\\Microsoft.AI.WindowsServer.dll</HintPath>\r\n      <Private>True</Priv" +
                    "ate>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.ApplicationInsights, V" +
                    "ersion=2.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchi" +
                    "tecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.ApplicationInsights.2.1.0\\" +
                    "lib\\net45\\Microsoft.ApplicationInsights.dll</HintPath>\r\n      <Private>True</Pri" +
                    "vate>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.CodeDom.Providers.Dot" +
                    "NetCompilerPlatform, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad" +
                    "364e35, processorArchitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.Code" +
                    "Dom.Providers.DotNetCompilerPlatform.1.0.0\\lib\\net45\\Microsoft.CodeDom.Providers" +
                    ".DotNetCompilerPlatform.dll</HintPath>\r\n      <Private>True</Private>\r\n    </Ref" +
                    "erence>\r\n    <Reference Include=\"Microsoft.CSharp\" />\r\n    <Reference Include=\"M" +
                    "icrosoft.Extensions.DependencyInjection, Version=1.0.0.0, Culture=neutral, Publi" +
                    "cKeyToken=adb9793829ddae60, processorArchitecture=MSIL\">\r\n      <HintPath>..\\pac" +
                    "kages\\Microsoft.Extensions.DependencyInjection.1.0.0-rc2-final\\lib\\netstandard1." +
                    "1\\Microsoft.Extensions.DependencyInjection.dll</HintPath>\r\n      <Private>True</" +
                    "Private>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.Extensions.Depende" +
                    "ncyInjection.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=adb9" +
                    "793829ddae60, processorArchitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsof" +
                    "t.Extensions.DependencyInjection.Abstractions.1.0.0-rc2-final\\lib\\netstandard1.0" +
                    "\\Microsoft.Extensions.DependencyInjection.Abstractions.dll</HintPath>\r\n      <Pr" +
                    "ivate>True</Private>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.OData." +
                    "Core, Version=6.15.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, proces" +
                    "sorArchitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.OData.Core.6.15.0\\" +
                    "lib\\portable-net45+win+wpa81\\Microsoft.OData.Core.dll</HintPath>\r\n      <Private" +
                    ">True</Private>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.OData.Edm, " +
                    "Version=6.15.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArc" +
                    "hitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.OData.Edm.6.15.0\\lib\\por" +
                    "table-net45+win+wpa81\\Microsoft.OData.Edm.dll</HintPath>\r\n      <Private>True</P" +
                    "rivate>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.Restier.Core, Versi" +
                    "on=0.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitect" +
                    "ure=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.Restier.Core.0.5.0-beta\\lib\\ne" +
                    "t45\\Microsoft.Restier.Core.dll</HintPath>\r\n      <Private>True</Private>\r\n    </" +
                    "Reference>\r\n    <Reference Include=\"Microsoft.Restier.Providers.EntityFramework," +
                    " Version=0.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArc" +
                    "hitecture=MSIL\">\r\n      <HintPath>..\\packages\\Microsoft.Restier.Providers.Entity" +
                    "Framework.0.5.0-beta\\lib\\net45\\Microsoft.Restier.Providers.EntityFramework.dll</" +
                    "HintPath>\r\n      <Private>True</Private>\r\n    </Reference>\r\n    <Reference Inclu" +
                    "de=\"Microsoft.Restier.Publishers.OData, Version=0.5.0.0, Culture=neutral, Public" +
                    "KeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <HintPath>..\\pack" +
                    "ages\\Microsoft.Restier.Publishers.OData.0.5.0-beta\\lib\\net45\\Microsoft.Restier.P" +
                    "ublishers.OData.dll</HintPath>\r\n      <Private>True</Private>\r\n    </Reference>\r" +
                    "\n    <Reference Include=\"Microsoft.Spatial, Version=6.15.0.0, Culture=neutral, P" +
                    "ublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <HintPath>.." +
                    "\\packages\\Microsoft.Spatial.6.15.0\\lib\\portable-net45+win+wpa81\\Microsoft.Spatia" +
                    "l.dll</HintPath>\r\n      <Private>True</Private>\r\n    </Reference>\r\n    <Referenc" +
                    "e Include=\"System.Net.Http\" />\r\n    <Reference Include=\"System.Web.DynamicData\" " +
                    "/>\r\n    <Reference Include=\"System.Web.Entity\" />\r\n    <Reference Include=\"Syste" +
                    "m.Web.ApplicationServices\" />\r\n    <Reference Include=\"System.ComponentModel.Dat" +
                    "aAnnotations\" />\r\n    <Reference Include=\"System\" />\r\n    <Reference Include=\"Sy" +
                    "stem.Data\" />\r\n    <Reference Include=\"System.Core\" />\r\n    <Reference Include=\"" +
                    "System.Data.DataSetExtensions\" />\r\n    <Reference Include=\"System.Web.Extensions" +
                    "\" />\r\n    <Reference Include=\"System.Web.OData, Version=5.9.0.0, Culture=neutral" +
                    ", PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL\">\r\n      <HintPath" +
                    ">..\\packages\\Microsoft.AspNet.OData.5.9.0\\lib\\net45\\System.Web.OData.dll</HintPa" +
                    "th>\r\n      <Private>True</Private>\r\n    </Reference>\r\n    <Reference Include=\"Sy" +
                    "stem.Xml.Linq\" />\r\n    <Reference Include=\"System.Drawing\" />\r\n    <Reference In" +
                    "clude=\"System.Web\" />\r\n    <Reference Include=\"System.Xml\" />\r\n    <Reference In" +
                    "clude=\"System.Configuration\" />\r\n    <Reference Include=\"System.Web.Services\" />" +
                    "\r\n    <Reference Include=\"System.EnterpriseServices\" />\r\n  </ItemGroup>\r\n  <Item" +
                    "Group>\r\n    <Reference Include=\"Newtonsoft.Json\">\r\n      <HintPath>..\\packages\\N" +
                    "ewtonsoft.Json.6.0.4\\lib\\net45\\Newtonsoft.Json.dll</HintPath>\r\n    </Reference>\r" +
                    "\n    <Reference Include=\"System.Net.Http.Formatting\">\r\n      <HintPath>..\\packag" +
                    "es\\Microsoft.AspNet.WebApi.Client.5.2.3\\lib\\net45\\System.Net.Http.Formatting.dll" +
                    "</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.Http\">\r\n      " +
                    "<HintPath>..\\packages\\Microsoft.AspNet.WebApi.Core.5.2.3\\lib\\net45\\System.Web.Ht" +
                    "tp.dll</HintPath>\r\n    </Reference>\r\n    <Reference Include=\"System.Web.Http.Web" +
                    "Host\">\r\n      <HintPath>..\\packages\\Microsoft.AspNet.WebApi.WebHost.5.2.3\\lib\\ne" +
                    "t45\\System.Web.Http.WebHost.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n  " +
                    "<ItemGroup>\r\n    <Content Include=\"Global.asax\" />\r\n    <Content Include=\"script" +
                    "s\\ai.0.22.19-build00125.js\" />\r\n    <Content Include=\"scripts\\ai.0.22.19-build00" +
                    "125.min.js\" />\r\n    <Content Include=\"Web.config\" />\r\n  </ItemGroup>\r\n  <ItemGro" +
                    "up>\r\n    <Compile Include=\"App_Start\\WebApiConfig.cs\" />\r\n    <Compile Include=\"" +
                    "Global.asax.cs\">\r\n      <DependentUpon>Global.asax</DependentUpon>\r\n    </Compil" +
                    "e>\r\n    <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n  </ItemGroup>\r\n  <Ite" +
                    "mGroup>\r\n    <Content Include=\"packages.config\" />\r\n    <Content Include=\"Applic" +
                    "ationInsights.config\">\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutpu" +
                    "tDirectory>\r\n    </Content>\r\n    <None Include=\"Web.Debug.config\">\r\n      <Depen" +
                    "dentUpon>Web.config</DependentUpon>\r\n    </None>\r\n    <None Include=\"Web.Release" +
                    ".config\">\r\n      <DependentUpon>Web.config</DependentUpon>\r\n    </None>\r\n  </Ite" +
                    "mGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"App_Data\\\" />\r\n    <Folder Include=" +
                    "\"Controllers\\\" />\r\n    <Folder Include=\"Models\\\" />\r\n  </ItemGroup>\r\n  <Property" +
                    "Group>\r\n    <VisualStudioVersion Condition=\"\'$(VisualStudioVersion)\' == \'\'\">10.0" +
                    "</VisualStudioVersion>\r\n    <VSToolsPath Condition=\"\'$(VSToolsPath)\' == \'\'\">$(MS" +
                    "BuildExtensionsPath32)\\Microsoft\\VisualStudio\\v$(VisualStudioVersion)</VSToolsPa" +
                    "th>\r\n  </PropertyGroup>\r\n  <Import Project=\"$(MSBuildBinPath)\\Microsoft.CSharp.t" +
                    "argets\" />\r\n  <Import Project=\"$(VSToolsPath)\\WebApplications\\Microsoft.WebAppli" +
                    "cation.targets\" Condition=\"\'$(VSToolsPath)\' != \'\'\" />\r\n  <Import Project=\"$(MSBu" +
                    "ildExtensionsPath32)\\Microsoft\\VisualStudio\\v10.0\\WebApplications\\Microsoft.WebA" +
                    "pplication.targets\" Condition=\"false\" />\r\n  <ProjectExtensions>\r\n    <VisualStud" +
                    "io>\r\n      <FlavorProperties GUID=\"{349c5851-65df-11da-9384-00065b846f21}\">\r\n   " +
                    "     <WebProjectProperties>\r\n          <UseIIS>True</UseIIS>\r\n          <AutoAss" +
                    "ignPort>True</AutoAssignPort>\r\n          <DevelopmentServerPort>3447</Developmen" +
                    "tServerPort>\r\n          <DevelopmentServerVPath>/</DevelopmentServerVPath>\r\n    " +
                    "      <IISUrl>http://localhost:3447/</IISUrl>\r\n          <NTLMAuthentication>Fal" +
                    "se</NTLMAuthentication>\r\n          <UseCustomServer>False</UseCustomServer>\r\n   " +
                    "       <CustomServerUrl>\r\n          </CustomServerUrl>\r\n          <SaveServerSet" +
                    "tingsInUserFile>False</SaveServerSettingsInUserFile>\r\n        </WebProjectProper" +
                    "ties>\r\n      </FlavorProperties>\r\n    </VisualStudio>\r\n  </ProjectExtensions>\r\n " +
                    " <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\r" +
                    "\n    <PropertyGroup>\r\n      <ErrorText>This project references NuGet package(s) " +
                    "that are missing on this computer. Use NuGet Package Restore to download them.  " +
                    "For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The mis" +
                    "sing file is {0}.</ErrorText>\r\n    </PropertyGroup>\r\n    <Error Condition=\"!Exis" +
                    "ts(\'..\\packages\\Microsoft.Net.Compilers.1.0.0\\build\\Microsoft.Net.Compilers.prop" +
                    "s\')\" Text=\"$([System.String]::Format(\'$(ErrorText)\', \'..\\packages\\Microsoft.Net." +
                    "Compilers.1.0.0\\build\\Microsoft.Net.Compilers.props\'))\" />\r\n    <Error Condition" +
                    "=\"!Exists(\'..\\packages\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.1.0.0\\" +
                    "build\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform.props\')\" Text=\"$([Syste" +
                    "m.String]::Format(\'$(ErrorText)\', \'..\\packages\\Microsoft.CodeDom.Providers.DotNe" +
                    "tCompilerPlatform.1.0.0\\build\\Microsoft.CodeDom.Providers.DotNetCompilerPlatform" +
                    ".props\'))\" />\r\n  </Target>\r\n  <!-- To modify your build process, add your task i" +
                    "nside one of the targets below and uncomment it. \r\n       Other similar extensio" +
                    "n points exist, see Microsoft.Common.targets.\r\n  <Target Name=\"BeforeBuild\">\r\n  " +
                    "</Target>\r\n  <Target Name=\"AfterBuild\">\r\n  </Target>\r\n  -->\r\n</Project>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class CSPROJFileBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
